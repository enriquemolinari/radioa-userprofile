/*
 * This file is generated by jOOQ.
 */
package userprofile.persistence.jooq.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import userprofile.persistence.jooq.App;
import userprofile.persistence.jooq.Keys;
import userprofile.persistence.jooq.tables.records.ListenerUserRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ListenerUser extends TableImpl<ListenerUserRecord> {

    private static final long serialVersionUID = -1633911257;

    /**
     * The reference instance of <code>APP.LISTENER_USER</code>
     */
    public static final ListenerUser LISTENER_USER = new ListenerUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ListenerUserRecord> getRecordType() {
        return ListenerUserRecord.class;
    }

    /**
     * The column <code>APP.LISTENER_USER.ID_USER</code>.
     */
    public final TableField<ListenerUserRecord, Integer> ID_USER = createField(DSL.name("ID_USER"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>APP.LISTENER_USER.ID_LISTENER</code>.
     */
    public final TableField<ListenerUserRecord, Integer> ID_LISTENER = createField(DSL.name("ID_LISTENER"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>APP.LISTENER_USER.CREATION_DATE</code>.
     */
    public final TableField<ListenerUserRecord, LocalDateTime> CREATION_DATE = createField(DSL.name("CREATION_DATE"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>APP.LISTENER_USER.USERNAME</code>.
     */
    public final TableField<ListenerUserRecord, String> USERNAME = createField(DSL.name("USERNAME"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>APP.LISTENER_USER.PASSWORD</code>.
     */
    public final TableField<ListenerUserRecord, String> PASSWORD = createField(DSL.name("PASSWORD"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>APP.LISTENER_USER</code> table reference
     */
    public ListenerUser() {
        this(DSL.name("LISTENER_USER"), null);
    }

    /**
     * Create an aliased <code>APP.LISTENER_USER</code> table reference
     */
    public ListenerUser(String alias) {
        this(DSL.name(alias), LISTENER_USER);
    }

    /**
     * Create an aliased <code>APP.LISTENER_USER</code> table reference
     */
    public ListenerUser(Name alias) {
        this(alias, LISTENER_USER);
    }

    private ListenerUser(Name alias, Table<ListenerUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private ListenerUser(Name alias, Table<ListenerUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ListenerUser(Table<O> child, ForeignKey<O, ListenerUserRecord> key) {
        super(child, key, LISTENER_USER);
    }

    @Override
    public Schema getSchema() {
        return App.APP;
    }

    @Override
    public Identity<ListenerUserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LISTENER_USER;
    }

    @Override
    public UniqueKey<ListenerUserRecord> getPrimaryKey() {
        return Keys.SQL0000000034_F8FA4CF2_0172_B50B_E31B_FFFFC60AC551;
    }

    @Override
    public List<UniqueKey<ListenerUserRecord>> getKeys() {
        return Arrays.<UniqueKey<ListenerUserRecord>>asList(Keys.SQL0000000034_F8FA4CF2_0172_B50B_E31B_FFFFC60AC551);
    }

    @Override
    public List<ForeignKey<ListenerUserRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ListenerUserRecord, ?>>asList(Keys.SQL0000000033_6DBE0CF1_0172_B50B_E31B_FFFFC60AC551);
    }

    public Listener listener() {
        return new Listener(this, Keys.SQL0000000033_6DBE0CF1_0172_B50B_E31B_FFFFC60AC551);
    }

    @Override
    public ListenerUser as(String alias) {
        return new ListenerUser(DSL.name(alias), this);
    }

    @Override
    public ListenerUser as(Name alias) {
        return new ListenerUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ListenerUser rename(String name) {
        return new ListenerUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ListenerUser rename(Name name) {
        return new ListenerUser(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, LocalDateTime, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
