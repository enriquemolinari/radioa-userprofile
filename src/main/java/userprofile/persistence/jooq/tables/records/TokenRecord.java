/*
 * This file is generated by jOOQ.
 */
package userprofile.persistence.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;

import userprofile.persistence.jooq.tables.Token;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenRecord extends TableRecordImpl<TokenRecord> implements Record3<Integer, LocalDateTime, String> {

    private static final long serialVersionUID = 2021819140;

    /**
     * Setter for <code>APP.TOKEN.ID_USER</code>.
     */
    public void setIdUser(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>APP.TOKEN.ID_USER</code>.
     */
    public Integer getIdUser() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>APP.TOKEN.CREATION_DATE</code>.
     */
    public void setCreationDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>APP.TOKEN.CREATION_DATE</code>.
     */
    public LocalDateTime getCreationDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>APP.TOKEN.TOKEN</code>.
     */
    public void setToken(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>APP.TOKEN.TOKEN</code>.
     */
    public String getToken() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, LocalDateTime, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, LocalDateTime, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Token.TOKEN.ID_USER;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Token.TOKEN.CREATION_DATE;
    }

    @Override
    public Field<String> field3() {
        return Token.TOKEN.TOKEN_;
    }

    @Override
    public Integer component1() {
        return getIdUser();
    }

    @Override
    public LocalDateTime component2() {
        return getCreationDate();
    }

    @Override
    public String component3() {
        return getToken();
    }

    @Override
    public Integer value1() {
        return getIdUser();
    }

    @Override
    public LocalDateTime value2() {
        return getCreationDate();
    }

    @Override
    public String value3() {
        return getToken();
    }

    @Override
    public TokenRecord value1(Integer value) {
        setIdUser(value);
        return this;
    }

    @Override
    public TokenRecord value2(LocalDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public TokenRecord value3(String value) {
        setToken(value);
        return this;
    }

    @Override
    public TokenRecord values(Integer value1, LocalDateTime value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TokenRecord
     */
    public TokenRecord() {
        super(Token.TOKEN);
    }

    /**
     * Create a detached, initialised TokenRecord
     */
    public TokenRecord(Integer idUser, LocalDateTime creationDate, String token) {
        super(Token.TOKEN);

        set(0, idUser);
        set(1, creationDate);
        set(2, token);
    }
}
