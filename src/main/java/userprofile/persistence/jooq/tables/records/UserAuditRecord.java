/*
 * This file is generated by jOOQ.
 */
package userprofile.persistence.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import userprofile.persistence.jooq.tables.UserAudit;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAuditRecord extends TableRecordImpl<UserAuditRecord> implements Record2<Integer, LocalDateTime> {

    private static final long serialVersionUID = 1835457747;

    /**
     * Setter for <code>APP.USER_AUDIT.ID_USER</code>.
     */
    public void setIdUser(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>APP.USER_AUDIT.ID_USER</code>.
     */
    public Integer getIdUser() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>APP.USER_AUDIT.LOGIN_DATE</code>.
     */
    public void setLoginDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>APP.USER_AUDIT.LOGIN_DATE</code>.
     */
    public LocalDateTime getLoginDate() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, LocalDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, LocalDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserAudit.USER_AUDIT.ID_USER;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return UserAudit.USER_AUDIT.LOGIN_DATE;
    }

    @Override
    public Integer component1() {
        return getIdUser();
    }

    @Override
    public LocalDateTime component2() {
        return getLoginDate();
    }

    @Override
    public Integer value1() {
        return getIdUser();
    }

    @Override
    public LocalDateTime value2() {
        return getLoginDate();
    }

    @Override
    public UserAuditRecord value1(Integer value) {
        setIdUser(value);
        return this;
    }

    @Override
    public UserAuditRecord value2(LocalDateTime value) {
        setLoginDate(value);
        return this;
    }

    @Override
    public UserAuditRecord values(Integer value1, LocalDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserAuditRecord
     */
    public UserAuditRecord() {
        super(UserAudit.USER_AUDIT);
    }

    /**
     * Create a detached, initialised UserAuditRecord
     */
    public UserAuditRecord(Integer idUser, LocalDateTime loginDate) {
        super(UserAudit.USER_AUDIT);

        set(0, idUser);
        set(1, loginDate);
    }
}
